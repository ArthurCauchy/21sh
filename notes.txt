TODO :
- cat /dev/random | ls - COMPLETELY BROKEN
- heredoc (<<)
- Command not found + redirection : actuellement comme sh (OK), a modifier pour faire comme csh (mieux).
- FIX : ls >&3 : should be wrong but OK
- FIX : close opened files that ARE NOT overwritten by restore's dup2
- UPDATE : "c'est le shell qui save et restore, mais c'est le child process qui applique les redirections"
- DEBAT : "Bash handles several filenames specially when they are used in redirections, as described in the following table."
- CDPATH
- reparer le builtin env

TODO job control :
- le shell doit envoyer SIGHUP a tous les process quand il en recoit un (?)
- shell: ignore interative and job control signals
- globale g_running_proc a delete
- comprendre comment est defini le job courant, pour fg et bg sans arguments
- Pour split les jobs :
	- faire une PETITE fonction recursive qui parcours l'arbre et split en sous-arbres NON VIDES et SANS AMP
	- return: est-ce que le sous-arbre a un amp, et si non, le parent add a la liste /array de jobs
- stocker les jobs en 2 listes / array : une FG et une BG

Notes job control :
- les notifs des jobs termines n'est affiche qu'au moment d'afficher le prompt
- fg : fait passer un job en premier plan
- bg : fait passer un job en arriere plan
- jobs : liste les jobs non termines
- impossible de recuperer l'exit code d'un process en background, car le lancement renvoie tjr 0
- jobs, fg et bg ne peuvent pas etre lance en arriere plan

TODO bonus :
- job control
- 21shrc
- builtin which
- builtin help
- tilde expansion
- pourquoi est-ce que c'est pas builtin_parse_options qui fait le bzero ? :o

Notes :
- pour voir les file descriptors ouverts : lsof -p <pid>
- Pipe non fonctionnels (ne demarrent pas en meme temps). A fix, faire le job control en mÃªme temps.
