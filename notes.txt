TODO :
- cat /dev/random | ls - COMPLETELY BROKEN
- heredoc (<<)
- Command not found + redirection : actuellement comme sh (OK), a modifier pour faire comme csh (mieux).
- FIX : ls >&3 : should be wrong but OK
- FIX : close opened files that ARE NOT overwritten by restore's dup2
- UPDATE : "c'est le shell qui save et restore, mais c'est le child process qui applique les redirections"
- DEBAT : "Bash handles several filenames specially when they are used in redirections, as described in the following table."
- CDPATH
- reparer le builtin env

TODO job control :
- le shell doit envoyer SIGHUP a tous les process quand il en recoit un (?)
- shell: ignore interative and job control signals
- globale g_running_proc a delete
- comprendre comment est defini le job courant, pour fg et bg sans arguments
- faire en sorte que l'arbre de process soit parcourable plusieurs fois ?
	- lancer l'arbre depuis la racine
	- poser une marque sur le premier process (exec = -1 : pas fait, 0 : termine OK, 1 : termine KO)
	- lancer le premier process (ou plusieurs si pipe)
	- sortir de l'arbre, attendre la fin du process
	- relancer l'arbre depuis la racine, mais on connais le resultat des process
- stocker les jobs en 2 listes / array : une FG et une BG

Notes job control :
- les notifs des jobs termines n'est affiche qu'au moment d'afficher le prompt
- impossible de recuperer l'exit code d'un process en background, car le lancement renvoie tjr 0
- fg : fait passer un job en premier plan
- bg : fait passer un job en arriere plan
- jobs : liste les jobs non termines
- jobs, fg et bg ne peuvent pas etre lance en arriere plan

TODO bonus :
- job control
- 21shrc
- builtin which
- builtin help
- tilde expansion
- pourquoi est-ce que c'est pas builtin_parse_options qui fait le bzero ? :o

Notes :
- pour voir les file descriptors ouverts : lsof -p <pid>
- Pipe non fonctionnels (ne demarrent pas en meme temps). A fix, faire le job control en mÃªme temps.
